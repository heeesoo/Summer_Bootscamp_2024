#! /home/heesu/tools/iverilog-12/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 10;
:vpi_module "/home/heesu/tools/iverilog-12/lib/ivl/system.vpi";
:vpi_module "/home/heesu/tools/iverilog-12/lib/ivl/vhdl_sys.vpi";
:vpi_module "/home/heesu/tools/iverilog-12/lib/ivl/vhdl_textio.vpi";
:vpi_module "/home/heesu/tools/iverilog-12/lib/ivl/v2005_math.vpi";
:vpi_module "/home/heesu/tools/iverilog-12/lib/ivl/va_math.vpi";
S_0x1ca9670 .scope module, "tb_adder" "tb_adder" 2 4;
 .timescale -9 -10;
v0x1ccdda0_0 .var "a", 3 0;
v0x1ccde80_0 .var "b", 3 0;
v0x1ccdf20_0 .var "cin", 0 0;
v0x1cce080_0 .net "cout", 0 0, L_0x1ccf9a0;  1 drivers
v0x1cce120_0 .net "out", 3 0, L_0x1cd0260;  1 drivers
S_0x1c99c10 .scope module, "u_r_adder_4bit" "r_adder_4bit" 2 13, 3 1 0, S_0x1ca9670;
 .timescale 0 0;
    .port_info 0 /INPUT 4 "a";
    .port_info 1 /INPUT 4 "b";
    .port_info 2 /INPUT 1 "cin";
    .port_info 3 /OUTPUT 4 "out";
    .port_info 4 /OUTPUT 1 "cout";
v0x1ccd7e0_0 .net "a", 3 0, v0x1ccdda0_0;  1 drivers
v0x1ccd8e0_0 .net "b", 3 0, v0x1ccde80_0;  1 drivers
v0x1ccd9c0_0 .net "cin", 0 0, v0x1ccdf20_0;  1 drivers
v0x1ccda60_0 .net "co_w", 0 0, L_0x1cce970;  1 drivers
v0x1ccdb00_0 .net "cout", 0 0, L_0x1ccf9a0;  alias, 1 drivers
v0x1ccdc40_0 .net "out", 3 0, L_0x1cd0260;  alias, 1 drivers
L_0x1ccf0b0 .part v0x1ccdda0_0, 0, 2;
L_0x1ccf150 .part v0x1ccde80_0, 0, 2;
L_0x1cd0120 .part v0x1ccdda0_0, 2, 2;
L_0x1cd01c0 .part v0x1ccde80_0, 2, 2;
L_0x1cd0260 .concat8 [ 2 2 0 0], L_0x1ccf010, L_0x1cd0080;
S_0x1c9acf0 .scope module, "u_adder_2bit_1" "r_adder_2bit" 3 12, 4 1 0, S_0x1c99c10;
 .timescale 0 0;
    .port_info 0 /INPUT 2 "a";
    .port_info 1 /INPUT 2 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /OUTPUT 2 "out";
    .port_info 4 /OUTPUT 1 "cout";
v0x1cca0d0_0 .net "a", 1 0, L_0x1ccf0b0;  1 drivers
v0x1cca1d0_0 .net "b", 1 0, L_0x1ccf150;  1 drivers
v0x1cca2b0_0 .net "c", 0 0, v0x1ccdf20_0;  alias, 1 drivers
v0x1cca3a0_0 .net "co_w", 0 0, L_0x1cce1c0;  1 drivers
v0x1cca440_0 .net "cout", 0 0, L_0x1cce970;  alias, 1 drivers
v0x1cca530_0 .net "out", 1 0, L_0x1ccf010;  1 drivers
L_0x1cce710 .part L_0x1ccf0b0, 0, 1;
L_0x1cce840 .part L_0x1ccf150, 0, 1;
L_0x1ccedb0 .part L_0x1ccf0b0, 1, 1;
L_0x1cceee0 .part L_0x1ccf150, 1, 1;
L_0x1ccf010 .concat8 [ 1 1 0 0], L_0x1cce4f0, L_0x1cceb90;
S_0x1ca98b0 .scope module, "u_full_adder_1" "full_adder" 4 12, 5 1 0, S_0x1c9acf0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /OUTPUT 1 "out";
    .port_info 4 /OUTPUT 1 "cout";
L_0x1cce1c0 .functor OR 1, L_0x1cce460, L_0x1cce680, C4<0>, C4<0>;
v0x1cc8530_0 .net "a", 0 0, L_0x1cce710;  1 drivers
v0x1cc85f0_0 .net "b", 0 0, L_0x1cce840;  1 drivers
v0x1cc86c0_0 .net "c", 0 0, v0x1ccdf20_0;  alias, 1 drivers
v0x1cc87c0_0 .net "co_w1", 0 0, L_0x1cce460;  1 drivers
v0x1cc8890_0 .net "co_w2", 0 0, L_0x1cce680;  1 drivers
v0x1cc8980_0 .net "cout", 0 0, L_0x1cce1c0;  alias, 1 drivers
v0x1cc8a20_0 .net "out", 0 0, L_0x1cce4f0;  1 drivers
v0x1cc8af0_0 .net "sum_w", 0 0, L_0x1cce310;  1 drivers
S_0x1ca8ed0 .scope module, "u_half_adder_1" "half_adder" 5 16, 6 1 0, S_0x1ca98b0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "co";
L_0x1cce310 .functor XOR 1, L_0x1cce710, L_0x1cce840, C4<0>, C4<0>;
L_0x1cce460 .functor AND 1, L_0x1cce710, L_0x1cce840, C4<1>, C4<1>;
v0x1ca9bd0_0 .net "a", 0 0, L_0x1cce710;  alias, 1 drivers
v0x1c99da0_0 .net "b", 0 0, L_0x1cce840;  alias, 1 drivers
v0x1cc7dd0_0 .net "co", 0 0, L_0x1cce460;  alias, 1 drivers
v0x1cc7e70_0 .net "sum", 0 0, L_0x1cce310;  alias, 1 drivers
S_0x1cc7fb0 .scope module, "u_half_adder_2" "half_adder" 5 23, 6 1 0, S_0x1ca98b0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "co";
L_0x1cce4f0 .functor XOR 1, L_0x1cce310, v0x1ccdf20_0, C4<0>, C4<0>;
L_0x1cce680 .functor AND 1, L_0x1cce310, v0x1ccdf20_0, C4<1>, C4<1>;
v0x1cc81b0_0 .net "a", 0 0, L_0x1cce310;  alias, 1 drivers
v0x1cc8250_0 .net "b", 0 0, v0x1ccdf20_0;  alias, 1 drivers
v0x1cc82f0_0 .net "co", 0 0, L_0x1cce680;  alias, 1 drivers
v0x1cc83c0_0 .net "sum", 0 0, L_0x1cce4f0;  alias, 1 drivers
S_0x1cc8be0 .scope module, "u_full_adder_2" "full_adder" 4 20, 5 1 0, S_0x1c9acf0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /OUTPUT 1 "out";
    .port_info 4 /OUTPUT 1 "cout";
L_0x1cce970 .functor OR 1, L_0x1cceb00, L_0x1cced20, C4<0>, C4<0>;
v0x1cc9a30_0 .net "a", 0 0, L_0x1ccedb0;  1 drivers
v0x1cc9af0_0 .net "b", 0 0, L_0x1cceee0;  1 drivers
v0x1cc9bc0_0 .net "c", 0 0, L_0x1cce1c0;  alias, 1 drivers
v0x1cc9ce0_0 .net "co_w1", 0 0, L_0x1cceb00;  1 drivers
v0x1cc9d80_0 .net "co_w2", 0 0, L_0x1cced20;  1 drivers
v0x1cc9e70_0 .net "cout", 0 0, L_0x1cce970;  alias, 1 drivers
v0x1cc9f10_0 .net "out", 0 0, L_0x1cceb90;  1 drivers
v0x1cc9fe0_0 .net "sum_w", 0 0, L_0x1ccea00;  1 drivers
S_0x1cc8dc0 .scope module, "u_half_adder_1" "half_adder" 5 16, 6 1 0, S_0x1cc8be0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "co";
L_0x1ccea00 .functor XOR 1, L_0x1ccedb0, L_0x1cceee0, C4<0>, C4<0>;
L_0x1cceb00 .functor AND 1, L_0x1ccedb0, L_0x1cceee0, C4<1>, C4<1>;
v0x1cc9040_0 .net "a", 0 0, L_0x1ccedb0;  alias, 1 drivers
v0x1cc9120_0 .net "b", 0 0, L_0x1cceee0;  alias, 1 drivers
v0x1cc91e0_0 .net "co", 0 0, L_0x1cceb00;  alias, 1 drivers
v0x1cc92b0_0 .net "sum", 0 0, L_0x1ccea00;  alias, 1 drivers
S_0x1cc9420 .scope module, "u_half_adder_2" "half_adder" 5 23, 6 1 0, S_0x1cc8be0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "co";
L_0x1cceb90 .functor XOR 1, L_0x1ccea00, L_0x1cce1c0, C4<0>, C4<0>;
L_0x1cced20 .functor AND 1, L_0x1ccea00, L_0x1cce1c0, C4<1>, C4<1>;
v0x1cc9690_0 .net "a", 0 0, L_0x1ccea00;  alias, 1 drivers
v0x1cc9760_0 .net "b", 0 0, L_0x1cce1c0;  alias, 1 drivers
v0x1cc9830_0 .net "co", 0 0, L_0x1cced20;  alias, 1 drivers
v0x1cc9900_0 .net "sum", 0 0, L_0x1cceb90;  alias, 1 drivers
S_0x1cca670 .scope module, "u_adder_2bit_2" "r_adder_2bit" 3 20, 4 1 0, S_0x1c99c10;
 .timescale 0 0;
    .port_info 0 /INPUT 2 "a";
    .port_info 1 /INPUT 2 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /OUTPUT 2 "out";
    .port_info 4 /OUTPUT 1 "cout";
v0x1ccd2b0_0 .net "a", 1 0, L_0x1cd0120;  1 drivers
v0x1ccd3b0_0 .net "b", 1 0, L_0x1cd01c0;  1 drivers
v0x1ccd490_0 .net "c", 0 0, L_0x1cce970;  alias, 1 drivers
v0x1ccd530_0 .net "co_w", 0 0, L_0x1ccf240;  1 drivers
v0x1ccd5d0_0 .net "cout", 0 0, L_0x1ccf9a0;  alias, 1 drivers
v0x1ccd670_0 .net "out", 1 0, L_0x1cd0080;  1 drivers
L_0x1ccf7d0 .part L_0x1cd0120, 0, 1;
L_0x1ccf870 .part L_0x1cd01c0, 0, 1;
L_0x1ccfe20 .part L_0x1cd0120, 1, 1;
L_0x1ccff50 .part L_0x1cd01c0, 1, 1;
L_0x1cd0080 .concat8 [ 1 1 0 0], L_0x1ccf5b0, L_0x1ccfc00;
S_0x1cca870 .scope module, "u_full_adder_1" "full_adder" 4 12, 5 1 0, S_0x1cca670;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /OUTPUT 1 "out";
    .port_info 4 /OUTPUT 1 "cout";
L_0x1ccf240 .functor OR 1, L_0x1ccf520, L_0x1ccf740, C4<0>, C4<0>;
v0x1ccb720_0 .net "a", 0 0, L_0x1ccf7d0;  1 drivers
v0x1ccb7e0_0 .net "b", 0 0, L_0x1ccf870;  1 drivers
v0x1ccb8b0_0 .net "c", 0 0, L_0x1cce970;  alias, 1 drivers
v0x1ccb980_0 .net "co_w1", 0 0, L_0x1ccf520;  1 drivers
v0x1ccba50_0 .net "co_w2", 0 0, L_0x1ccf740;  1 drivers
v0x1ccbb40_0 .net "cout", 0 0, L_0x1ccf240;  alias, 1 drivers
v0x1ccbbe0_0 .net "out", 0 0, L_0x1ccf5b0;  1 drivers
v0x1ccbcb0_0 .net "sum_w", 0 0, L_0x1ccf3d0;  1 drivers
S_0x1ccaa80 .scope module, "u_half_adder_1" "half_adder" 5 16, 6 1 0, S_0x1cca870;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "co";
L_0x1ccf3d0 .functor XOR 1, L_0x1ccf7d0, L_0x1ccf870, C4<0>, C4<0>;
L_0x1ccf520 .functor AND 1, L_0x1ccf7d0, L_0x1ccf870, C4<1>, C4<1>;
v0x1ccad20_0 .net "a", 0 0, L_0x1ccf7d0;  alias, 1 drivers
v0x1ccae00_0 .net "b", 0 0, L_0x1ccf870;  alias, 1 drivers
v0x1ccaec0_0 .net "co", 0 0, L_0x1ccf520;  alias, 1 drivers
v0x1ccaf90_0 .net "sum", 0 0, L_0x1ccf3d0;  alias, 1 drivers
S_0x1ccb100 .scope module, "u_half_adder_2" "half_adder" 5 23, 6 1 0, S_0x1cca870;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "co";
L_0x1ccf5b0 .functor XOR 1, L_0x1ccf3d0, L_0x1cce970, C4<0>, C4<0>;
L_0x1ccf740 .functor AND 1, L_0x1ccf3d0, L_0x1cce970, C4<1>, C4<1>;
v0x1ccb370_0 .net "a", 0 0, L_0x1ccf3d0;  alias, 1 drivers
v0x1ccb440_0 .net "b", 0 0, L_0x1cce970;  alias, 1 drivers
v0x1ccb530_0 .net "co", 0 0, L_0x1ccf740;  alias, 1 drivers
v0x1ccb5d0_0 .net "sum", 0 0, L_0x1ccf5b0;  alias, 1 drivers
S_0x1ccbda0 .scope module, "u_full_adder_2" "full_adder" 4 20, 5 1 0, S_0x1cca670;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c";
    .port_info 3 /OUTPUT 1 "out";
    .port_info 4 /OUTPUT 1 "cout";
L_0x1ccf9a0 .functor OR 1, L_0x1ccfb70, L_0x1ccfd90, C4<0>, C4<0>;
v0x1cccc10_0 .net "a", 0 0, L_0x1ccfe20;  1 drivers
v0x1ccccd0_0 .net "b", 0 0, L_0x1ccff50;  1 drivers
v0x1cccda0_0 .net "c", 0 0, L_0x1ccf240;  alias, 1 drivers
v0x1cccec0_0 .net "co_w1", 0 0, L_0x1ccfb70;  1 drivers
v0x1cccf60_0 .net "co_w2", 0 0, L_0x1ccfd90;  1 drivers
v0x1ccd050_0 .net "cout", 0 0, L_0x1ccf9a0;  alias, 1 drivers
v0x1ccd0f0_0 .net "out", 0 0, L_0x1ccfc00;  1 drivers
v0x1ccd1c0_0 .net "sum_w", 0 0, L_0x1ccfac0;  1 drivers
S_0x1ccbfa0 .scope module, "u_half_adder_1" "half_adder" 5 16, 6 1 0, S_0x1ccbda0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "co";
L_0x1ccfac0 .functor XOR 1, L_0x1ccfe20, L_0x1ccff50, C4<0>, C4<0>;
L_0x1ccfb70 .functor AND 1, L_0x1ccfe20, L_0x1ccff50, C4<1>, C4<1>;
v0x1ccc220_0 .net "a", 0 0, L_0x1ccfe20;  alias, 1 drivers
v0x1ccc300_0 .net "b", 0 0, L_0x1ccff50;  alias, 1 drivers
v0x1ccc3c0_0 .net "co", 0 0, L_0x1ccfb70;  alias, 1 drivers
v0x1ccc490_0 .net "sum", 0 0, L_0x1ccfac0;  alias, 1 drivers
S_0x1ccc600 .scope module, "u_half_adder_2" "half_adder" 5 23, 6 1 0, S_0x1ccbda0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "co";
L_0x1ccfc00 .functor XOR 1, L_0x1ccfac0, L_0x1ccf240, C4<0>, C4<0>;
L_0x1ccfd90 .functor AND 1, L_0x1ccfac0, L_0x1ccf240, C4<1>, C4<1>;
v0x1ccc870_0 .net "a", 0 0, L_0x1ccfac0;  alias, 1 drivers
v0x1ccc940_0 .net "b", 0 0, L_0x1ccf240;  alias, 1 drivers
v0x1ccca10_0 .net "co", 0 0, L_0x1ccfd90;  alias, 1 drivers
v0x1cccae0_0 .net "sum", 0 0, L_0x1ccfc00;  alias, 1 drivers
    .scope S_0x1ca9670;
T_0 ;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x1ccdda0_0, 0, 4;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x1ccde80_0, 0, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x1ccdf20_0, 0, 1;
    %delay 100, 0;
    %pushi/vec4 5, 0, 4;
    %store/vec4 v0x1ccdda0_0, 0, 4;
    %pushi/vec4 6, 0, 4;
    %store/vec4 v0x1ccde80_0, 0, 4;
    %delay 100, 0;
    %pushi/vec4 6, 0, 4;
    %store/vec4 v0x1ccdda0_0, 0, 4;
    %pushi/vec4 7, 0, 4;
    %store/vec4 v0x1ccde80_0, 0, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x1ccdf20_0, 0, 1;
    %delay 100, 0;
    %pushi/vec4 10, 0, 4;
    %store/vec4 v0x1ccdda0_0, 0, 4;
    %pushi/vec4 12, 0, 4;
    %store/vec4 v0x1ccde80_0, 0, 4;
    %delay 100, 0;
    %vpi_call 2 41 "$finish" {0 0 0};
    %end;
    .thread T_0;
    .scope S_0x1ca9670;
T_1 ;
    %vpi_call 2 46 "$dumpfile", "wave.vcd" {0 0 0};
    %vpi_call 2 47 "$dumpvars", 32'sb00000000000000000000000000000000 {0 0 0};
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 7;
    "N/A";
    "<interactive>";
    "../../alu/sim/tb_adder.v";
    "../../alu/rtl/r_adder_4bit.v";
    "../../alu/rtl/r_adder_2bit.v";
    "../../alu/rtl/full_adder.v";
    "../../alu/rtl/half_adder.v";
