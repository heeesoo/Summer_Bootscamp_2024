$date
	Thu Jul 11 15:46:54 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb_adder $end
$var wire 32 ! sum [31:0] $end
$var wire 1 " cout $end
$var reg 32 # a [31:0] $end
$var reg 32 $ b [31:0] $end
$var reg 1 % cin $end
$scope module u_cla_32bit $end
$var wire 32 & a [31:0] $end
$var wire 32 ' b [31:0] $end
$var wire 1 % cin $end
$var wire 32 ( sum [31:0] $end
$var wire 1 " cout $end
$var wire 1 ) c_wire $end
$scope module u_cla_16bit_1 $end
$var wire 16 * a [15:0] $end
$var wire 16 + b [15:0] $end
$var wire 1 % cin $end
$var wire 16 , sum [15:0] $end
$var wire 1 ) cout $end
$var wire 1 - c_wire $end
$scope module u_cla_8bit_1 $end
$var wire 8 . a [7:0] $end
$var wire 8 / b [7:0] $end
$var wire 1 % cin $end
$var wire 8 0 sum [7:0] $end
$var wire 1 - cout $end
$var wire 1 1 c_wire $end
$scope module u_cla_4bit_1 $end
$var wire 4 2 a [3:0] $end
$var wire 4 3 b [3:0] $end
$var wire 1 % cin $end
$var wire 4 4 sum [3:0] $end
$var wire 4 5 p [3:0] $end
$var wire 4 6 g [3:0] $end
$var wire 4 7 cout_w [3:0] $end
$var wire 1 1 cout $end
$scope module u_pfa_0 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 % c $end
$var wire 1 : g $end
$var wire 1 ; p $end
$var wire 1 < s $end
$upscope $end
$scope module u_pfa_1 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? c $end
$var wire 1 @ g $end
$var wire 1 A p $end
$var wire 1 B s $end
$upscope $end
$scope module u_pfa_2 $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 E c $end
$var wire 1 F g $end
$var wire 1 G p $end
$var wire 1 H s $end
$upscope $end
$scope module u_pfa_3 $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 K c $end
$var wire 1 L g $end
$var wire 1 M p $end
$var wire 1 N s $end
$upscope $end
$upscope $end
$scope module u_cla_4bit_2 $end
$var wire 4 O a [3:0] $end
$var wire 4 P b [3:0] $end
$var wire 1 1 cin $end
$var wire 4 Q sum [3:0] $end
$var wire 4 R p [3:0] $end
$var wire 4 S g [3:0] $end
$var wire 4 T cout_w [3:0] $end
$var wire 1 - cout $end
$scope module u_pfa_0 $end
$var wire 1 U a $end
$var wire 1 V b $end
$var wire 1 1 c $end
$var wire 1 W g $end
$var wire 1 X p $end
$var wire 1 Y s $end
$upscope $end
$scope module u_pfa_1 $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 \ c $end
$var wire 1 ] g $end
$var wire 1 ^ p $end
$var wire 1 _ s $end
$upscope $end
$scope module u_pfa_2 $end
$var wire 1 ` a $end
$var wire 1 a b $end
$var wire 1 b c $end
$var wire 1 c g $end
$var wire 1 d p $end
$var wire 1 e s $end
$upscope $end
$scope module u_pfa_3 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 h c $end
$var wire 1 i g $end
$var wire 1 j p $end
$var wire 1 k s $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_cla_8bit_2 $end
$var wire 8 l a [7:0] $end
$var wire 8 m b [7:0] $end
$var wire 1 - cin $end
$var wire 8 n sum [7:0] $end
$var wire 1 ) cout $end
$var wire 1 o c_wire $end
$scope module u_cla_4bit_1 $end
$var wire 4 p a [3:0] $end
$var wire 4 q b [3:0] $end
$var wire 1 - cin $end
$var wire 4 r sum [3:0] $end
$var wire 4 s p [3:0] $end
$var wire 4 t g [3:0] $end
$var wire 4 u cout_w [3:0] $end
$var wire 1 o cout $end
$scope module u_pfa_0 $end
$var wire 1 v a $end
$var wire 1 w b $end
$var wire 1 - c $end
$var wire 1 x g $end
$var wire 1 y p $end
$var wire 1 z s $end
$upscope $end
$scope module u_pfa_1 $end
$var wire 1 { a $end
$var wire 1 | b $end
$var wire 1 } c $end
$var wire 1 ~ g $end
$var wire 1 !" p $end
$var wire 1 "" s $end
$upscope $end
$scope module u_pfa_2 $end
$var wire 1 #" a $end
$var wire 1 $" b $end
$var wire 1 %" c $end
$var wire 1 &" g $end
$var wire 1 '" p $end
$var wire 1 (" s $end
$upscope $end
$scope module u_pfa_3 $end
$var wire 1 )" a $end
$var wire 1 *" b $end
$var wire 1 +" c $end
$var wire 1 ," g $end
$var wire 1 -" p $end
$var wire 1 ." s $end
$upscope $end
$upscope $end
$scope module u_cla_4bit_2 $end
$var wire 4 /" a [3:0] $end
$var wire 4 0" b [3:0] $end
$var wire 1 o cin $end
$var wire 4 1" sum [3:0] $end
$var wire 4 2" p [3:0] $end
$var wire 4 3" g [3:0] $end
$var wire 4 4" cout_w [3:0] $end
$var wire 1 ) cout $end
$scope module u_pfa_0 $end
$var wire 1 5" a $end
$var wire 1 6" b $end
$var wire 1 o c $end
$var wire 1 7" g $end
$var wire 1 8" p $end
$var wire 1 9" s $end
$upscope $end
$scope module u_pfa_1 $end
$var wire 1 :" a $end
$var wire 1 ;" b $end
$var wire 1 <" c $end
$var wire 1 =" g $end
$var wire 1 >" p $end
$var wire 1 ?" s $end
$upscope $end
$scope module u_pfa_2 $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 B" c $end
$var wire 1 C" g $end
$var wire 1 D" p $end
$var wire 1 E" s $end
$upscope $end
$scope module u_pfa_3 $end
$var wire 1 F" a $end
$var wire 1 G" b $end
$var wire 1 H" c $end
$var wire 1 I" g $end
$var wire 1 J" p $end
$var wire 1 K" s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_cla_16bit_2 $end
$var wire 16 L" a [15:0] $end
$var wire 16 M" b [15:0] $end
$var wire 1 ) cin $end
$var wire 16 N" sum [15:0] $end
$var wire 1 " cout $end
$var wire 1 O" c_wire $end
$scope module u_cla_8bit_1 $end
$var wire 8 P" a [7:0] $end
$var wire 8 Q" b [7:0] $end
$var wire 1 ) cin $end
$var wire 8 R" sum [7:0] $end
$var wire 1 O" cout $end
$var wire 1 S" c_wire $end
$scope module u_cla_4bit_1 $end
$var wire 4 T" a [3:0] $end
$var wire 4 U" b [3:0] $end
$var wire 1 ) cin $end
$var wire 4 V" sum [3:0] $end
$var wire 4 W" p [3:0] $end
$var wire 4 X" g [3:0] $end
$var wire 4 Y" cout_w [3:0] $end
$var wire 1 S" cout $end
$scope module u_pfa_0 $end
$var wire 1 Z" a $end
$var wire 1 [" b $end
$var wire 1 ) c $end
$var wire 1 \" g $end
$var wire 1 ]" p $end
$var wire 1 ^" s $end
$upscope $end
$scope module u_pfa_1 $end
$var wire 1 _" a $end
$var wire 1 `" b $end
$var wire 1 a" c $end
$var wire 1 b" g $end
$var wire 1 c" p $end
$var wire 1 d" s $end
$upscope $end
$scope module u_pfa_2 $end
$var wire 1 e" a $end
$var wire 1 f" b $end
$var wire 1 g" c $end
$var wire 1 h" g $end
$var wire 1 i" p $end
$var wire 1 j" s $end
$upscope $end
$scope module u_pfa_3 $end
$var wire 1 k" a $end
$var wire 1 l" b $end
$var wire 1 m" c $end
$var wire 1 n" g $end
$var wire 1 o" p $end
$var wire 1 p" s $end
$upscope $end
$upscope $end
$scope module u_cla_4bit_2 $end
$var wire 4 q" a [3:0] $end
$var wire 4 r" b [3:0] $end
$var wire 1 S" cin $end
$var wire 4 s" sum [3:0] $end
$var wire 4 t" p [3:0] $end
$var wire 4 u" g [3:0] $end
$var wire 4 v" cout_w [3:0] $end
$var wire 1 O" cout $end
$scope module u_pfa_0 $end
$var wire 1 w" a $end
$var wire 1 x" b $end
$var wire 1 S" c $end
$var wire 1 y" g $end
$var wire 1 z" p $end
$var wire 1 {" s $end
$upscope $end
$scope module u_pfa_1 $end
$var wire 1 |" a $end
$var wire 1 }" b $end
$var wire 1 ~" c $end
$var wire 1 !# g $end
$var wire 1 "# p $end
$var wire 1 ## s $end
$upscope $end
$scope module u_pfa_2 $end
$var wire 1 $# a $end
$var wire 1 %# b $end
$var wire 1 &# c $end
$var wire 1 '# g $end
$var wire 1 (# p $end
$var wire 1 )# s $end
$upscope $end
$scope module u_pfa_3 $end
$var wire 1 *# a $end
$var wire 1 +# b $end
$var wire 1 ,# c $end
$var wire 1 -# g $end
$var wire 1 .# p $end
$var wire 1 /# s $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_cla_8bit_2 $end
$var wire 8 0# a [7:0] $end
$var wire 8 1# b [7:0] $end
$var wire 1 O" cin $end
$var wire 8 2# sum [7:0] $end
$var wire 1 " cout $end
$var wire 1 3# c_wire $end
$scope module u_cla_4bit_1 $end
$var wire 4 4# a [3:0] $end
$var wire 4 5# b [3:0] $end
$var wire 1 O" cin $end
$var wire 4 6# sum [3:0] $end
$var wire 4 7# p [3:0] $end
$var wire 4 8# g [3:0] $end
$var wire 4 9# cout_w [3:0] $end
$var wire 1 3# cout $end
$scope module u_pfa_0 $end
$var wire 1 :# a $end
$var wire 1 ;# b $end
$var wire 1 O" c $end
$var wire 1 <# g $end
$var wire 1 =# p $end
$var wire 1 ># s $end
$upscope $end
$scope module u_pfa_1 $end
$var wire 1 ?# a $end
$var wire 1 @# b $end
$var wire 1 A# c $end
$var wire 1 B# g $end
$var wire 1 C# p $end
$var wire 1 D# s $end
$upscope $end
$scope module u_pfa_2 $end
$var wire 1 E# a $end
$var wire 1 F# b $end
$var wire 1 G# c $end
$var wire 1 H# g $end
$var wire 1 I# p $end
$var wire 1 J# s $end
$upscope $end
$scope module u_pfa_3 $end
$var wire 1 K# a $end
$var wire 1 L# b $end
$var wire 1 M# c $end
$var wire 1 N# g $end
$var wire 1 O# p $end
$var wire 1 P# s $end
$upscope $end
$upscope $end
$scope module u_cla_4bit_2 $end
$var wire 4 Q# a [3:0] $end
$var wire 4 R# b [3:0] $end
$var wire 1 3# cin $end
$var wire 4 S# sum [3:0] $end
$var wire 4 T# p [3:0] $end
$var wire 4 U# g [3:0] $end
$var wire 4 V# cout_w [3:0] $end
$var wire 1 " cout $end
$scope module u_pfa_0 $end
$var wire 1 W# a $end
$var wire 1 X# b $end
$var wire 1 3# c $end
$var wire 1 Y# g $end
$var wire 1 Z# p $end
$var wire 1 [# s $end
$upscope $end
$scope module u_pfa_1 $end
$var wire 1 \# a $end
$var wire 1 ]# b $end
$var wire 1 ^# c $end
$var wire 1 _# g $end
$var wire 1 `# p $end
$var wire 1 a# s $end
$upscope $end
$scope module u_pfa_2 $end
$var wire 1 b# a $end
$var wire 1 c# b $end
$var wire 1 d# c $end
$var wire 1 e# g $end
$var wire 1 f# p $end
$var wire 1 g# s $end
$upscope $end
$scope module u_pfa_3 $end
$var wire 1 h# a $end
$var wire 1 i# b $end
$var wire 1 j# c $end
$var wire 1 k# g $end
$var wire 1 l# p $end
$var wire 1 m# s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
b0 V#
b0 U#
b0 T#
b0 S#
b0 R#
b0 Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
b0 9#
b0 8#
b0 7#
b0 6#
b0 5#
b0 4#
03#
b0 2#
b0 1#
b0 0#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
b0 v"
b0 u"
b0 t"
b0 s"
b0 r"
b0 q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
0S"
b0 R"
b0 Q"
b0 P"
0O"
b0 N"
b0 M"
b0 L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
0o
b0 n
b0 m
b0 l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
01
b0 0
b0 /
b0 .
0-
b0 ,
b0 +
b0 *
0)
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#100
1Y
11
1k
1K
1h
b1100 7
b100 T
1B
0N
b11 4
1<
b10110011 !
b10110011 (
b10110011 ,
b10110011 0
b1011 Q
1_
1A
1M
b1011 5
1;
b100 6
1F
b10 R
1^
b100 S
1c
1>
1D
1J
1a
18
1C
1Z
1`
b1110 3
b100 P
b101 2
b110 O
b1001110 /
b1100101 .
b1001110 +
b1100101 *
b1001110 $
b1001110 '
b1100101 #
b1100101 &
#200
0k
1\
0h
1H
b1 T
1E
b11 Q
1_
1W
b0 R
0^
b1 S
0c
0B
19
1V
0a
08
1U
0Z
0`
1?
b1111 3
b1 P
b100 2
b1 O
b1111 7
b11111 /
b10100 .
b110100 !
b110100 (
b110100 ,
b110100 0
b100 4
0<
b11111 +
b10100 *
1%
b11111 $
b11111 '
b10100 #
b10100 &
#300
b1110100 0
b111 Q
1e
b101110100 !
b101110100 (
b101110100 ,
b1 n
b1 r
1z
1b
1-
b1011 T
1]
b1011 S
1i
0>
0J
1[
1g
1=
1I
1Z
1f
b101 3
b1011 P
b1110 2
b1011 O
b10110101 /
b10111110 .
b10110101 +
b10111110 *
b10110101 $
b10110101 '
b10111110 #
b10111110 &
#400
