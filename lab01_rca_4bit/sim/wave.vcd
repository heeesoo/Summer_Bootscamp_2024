$date
	Wed Jul 10 21:35:58 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb_adder $end
$var wire 4 ! out [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module u_r_adder_4bit $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( out [3:0] $end
$var wire 1 " cout $end
$var wire 1 ) co_w $end
$scope module u_adder_2bit_1 $end
$var wire 2 * a [1:0] $end
$var wire 2 + b [1:0] $end
$var wire 1 % c $end
$var wire 2 , out [1:0] $end
$var wire 1 ) cout $end
$var wire 1 - co_w $end
$scope module u_full_adder_1 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 % c $end
$var wire 1 - cout $end
$var wire 1 0 sum_w $end
$var wire 1 1 out $end
$var wire 1 2 co_w2 $end
$var wire 1 3 co_w1 $end
$scope module u_half_adder_1 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 3 co $end
$var wire 1 0 sum $end
$upscope $end
$scope module u_half_adder_2 $end
$var wire 1 0 a $end
$var wire 1 % b $end
$var wire 1 2 co $end
$var wire 1 1 sum $end
$upscope $end
$upscope $end
$scope module u_full_adder_2 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 - c $end
$var wire 1 ) cout $end
$var wire 1 6 sum_w $end
$var wire 1 7 out $end
$var wire 1 8 co_w2 $end
$var wire 1 9 co_w1 $end
$scope module u_half_adder_1 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 9 co $end
$var wire 1 6 sum $end
$upscope $end
$scope module u_half_adder_2 $end
$var wire 1 6 a $end
$var wire 1 - b $end
$var wire 1 8 co $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_adder_2bit_2 $end
$var wire 2 : a [1:0] $end
$var wire 2 ; b [1:0] $end
$var wire 1 ) c $end
$var wire 2 < out [1:0] $end
$var wire 1 " cout $end
$var wire 1 = co_w $end
$scope module u_full_adder_1 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 ) c $end
$var wire 1 = cout $end
$var wire 1 @ sum_w $end
$var wire 1 A out $end
$var wire 1 B co_w2 $end
$var wire 1 C co_w1 $end
$scope module u_half_adder_1 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 C co $end
$var wire 1 @ sum $end
$upscope $end
$scope module u_half_adder_2 $end
$var wire 1 @ a $end
$var wire 1 ) b $end
$var wire 1 B co $end
$var wire 1 A sum $end
$upscope $end
$upscope $end
$scope module u_full_adder_2 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 = c $end
$var wire 1 " cout $end
$var wire 1 F sum_w $end
$var wire 1 G out $end
$var wire 1 H co_w2 $end
$var wire 1 I co_w1 $end
$scope module u_half_adder_1 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 I co $end
$var wire 1 F sum $end
$upscope $end
$scope module u_half_adder_2 $end
$var wire 1 F a $end
$var wire 1 = b $end
$var wire 1 H co $end
$var wire 1 G sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
b0 <
b0 ;
b0 :
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
b0 ,
b0 +
b0 *
0)
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#100
b10 <
1G
17
b1011 !
b1011 (
b11 ,
11
1=
16
10
1C
15
1?
1.
1>
b10 +
b1 ;
b1 *
b1 :
b110 $
b110 '
b101 #
b101 &
#200
b11 <
1A
1)
06
19
1-
1/
0.
14
b1110 !
b1110 (
b10 ,
01
12
b11 +
b10 *
1%
b111 $
b111 '
b110 #
b110 &
#300
0-
0G
11
02
b11 ,
17
08
0)
b111 !
b111 (
b1 <
1A
0B
0=
1"
00
16
09
1@
0C
1I
0/
05
1E
0>
1D
b0 +
b11 ;
b10 :
b1100 $
b1100 '
b1010 #
b1010 &
#400
